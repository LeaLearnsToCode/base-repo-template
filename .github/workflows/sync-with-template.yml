---
# File is source from LeaLearnsToCode/base-repo-template
# Do not modify!
# This file was adopted from
# - Run this workflow to pull changes from the template repository.
#
#   - Clone this repository. Check out a branch
#   - Copy files from the template onto this clone
#   - Push the branch to this repository
#   - Create a pull request in this repository
#
name: Sync changes from template

# TODO:
# - Switch to gh. Check https://github.com/cli/cli/issues/297 for updates

on:
  workflow_call:
    secrets:
      token:
        required: true
  workflow_dispatch:
  schedule:
    - cron: "17 5 * * 5"
  push:
    paths:
      - .github/workflows/sync-with-template.yml


env:
  BASE_BRANCH: main
  HEAD_BRANCH: chore/sync-from-template
  GIT_AUTHOR_NAME: ${{ github.repository_owner }}
  GIT_AUTHOR_EMAIL: ${{ github.repository_owner }}@users.noreply.github.com
  THIS_REPO: ${{ github.repository }}

jobs:
  get-template-repo:
    name: Load Template Repo Name
    runs-on: ubuntu-latest
    outputs:
      template_repo: ${{ steps.template.outputs.template_repo }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Load .gitrepotemplate
        id: template
        run: |
          echo "template_repo=$(cat .gitrepotemplate)" >> $GITHUB_OUTPUT

  sync-from-template:
    needs: [ get-template-repo ]
    # Do not run on the template repository itself
    if: ${{ github.repository != needs.get-template-repo.outputs.template_repo }}
    name: Sync changes from ${{ needs.get-template-repo.outputs.template_repo }}
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Check out template repository
        uses: actions/checkout@v2
        with:
          repository: ${{ needs.get-template-repo.outputs.REPO }}
          token: ${{ github.token }}
          path: ${{ needs.get-template-repo.outputs.REPO }}

      - name: Check out ${{ github.repository }}
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          token: ${{ github.token }}
          path: ${{ github.repository }}
      - name: Create branch in ${{ env.THIS_REPO }}
        run: |
          git -C "${THIS_REPO}" fetch origin "${HEAD_BRANCH}" || true
          git -C "${THIS_REPO}" branch -a
          git -C "${THIS_REPO}" checkout -B "${HEAD_BRANCH}" \
            "remotes/origin/${HEAD_BRANCH}" || \
          git -C "${THIS_REPO}" checkout -b "${HEAD_BRANCH}"

      - name: Copy template contents
        run: |
          _files="$(find ${REPO_TEMPLATE} \
            ! -path "*/.git/*" \
            ! -path "*/.github/workflows/*" \
            ! -name ".gitignore" \
            ! -name "README.md" \
            -type f \
            -print)"
          for _file in ${_files}; do
            _src="${_file}"
            _dst="${THIS_REPO}/${_file#${REPO_TEMPLATE}/}"
            # TODO: Find a more robust / elegant way to get this :point_down:
            _dst="${_dst%/*}/"
            mkdir -p "${_dst}"
            echo "INFO: Copy '${_src}' to '${_dst}'."
            cp "${_src}" "${_dst}"
          done
          git -C "${THIS_REPO}" diff

      - name: Commit changes, if any
        id: commit
        continue-on-error: true
        run: |
          git -C ${THIS_REPO} config user.name "${GIT_AUTHOR_NAME}"
          git -C ${THIS_REPO} config \
            user.email "${GIT_AUTHOR_EMAIL}"
          git -C ${THIS_REPO} add .
          git -C ${THIS_REPO} commit \
            -m "Sync from template@${{ github.sha }}"

      - name: Push topic branch
        if: steps.commit.outcome == 'success'
        run: git -C ${THIS_REPO} push -u origin "${HEAD_BRANCH}"

      - name: Create pull request
        if: steps.commit.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GITHUB_USER: ${{ github.actor }}
        run: |
          pushd ${THIS_REPO}
          hub pull-request \
            -b "${BASE_BRANCH}" \
            -h "${HEAD_BRANCH}" \
            --no-edit \
            -m "Pull updates from ${REPO_TEMPLATE}" \
            -m "Pull updates from ${REPO_TEMPLATE}"
          popd
